".source.julia":
  "Documented function":
    prefix: "functiond"
    body: '''
"""
    ${1:name}(${2:args})

${3:documentation}
"""
function ${1:name}(${2:args})
\t${4:body}
end # function
    '''
  "function":
    prefix: "function"
    body: '''
function ${1:name}(${2:args})
\t${3:body}
end # function
    '''
  'Else if':
    prefix: 'elseif'
    body: """
elseif ${1:condition}
\t$2
    """
  'Else if2':
    prefix: 'elif'
    body: """
elseif ${1:condition}
\t$2
    """
  "for":
    prefix: "for"
    body: '''
for ${1:variable}
\t$2
end # for
    '''
  "for/in":
    prefix: "forin"
    body: '''
for ${1:variable} in ${2:iterator}
\t$3
end # for
    '''
  "return":
      prefix: 'return'
      body: 'return $1'
  "if":
    prefix: "if"
    body: '''
if ${1:condition}
\t${2:body}
end # if
    '''
  "if/else":
    prefix: "ife"
    body: '''
if ${1:condition}
\t${2:true_body}
else
\t${3:false_body}
end # if
    '''
  "macro":
    prefix: "macro"
    body: '''
macro ${1:name}(${2:args})
\t${3:body}
end # macro
    '''
  "try/catch":
    prefix: "try"
    body: '''
try
\t${1:try_block}
catch $2
\t$3
end # try
    '''
  "try/finally":
    prefix: "tryf"
    body: '''
try
\t$1
finally
\t$2
end # try
    '''
  "try/catch/finally":
    prefix: "trycf"
    body: '''
try
\t${1:try_block}
catch $2
\t$3
finally
\t$4
end # try
    '''
  "struct":
    prefix: "struct"
    body: '''
struct ${1:name}
\t${2:fields}
end # struct
    '''
  "mutable struct":
    prefix: "mutable"
    body: '''
mutable struct ${1:name}
\t${2:fields}
end # mutable struct
    '''
  "abstract type":
    prefix: "abstract"
    body: 'abstract type ${1:name} end'
  "primtitive type":
    prefix: "primitive"
    body: 'primitive type ${1:name} ${2:bits} end'
  "while":
    prefix: "while"
    body: '''
while ${1:condition}
\t${2:body}
end # while
    '''
  'begin block':
    prefix: 'begin'
    body: """
begin
\t$1
end # begin
    """
  'let block':
    prefix: 'let'
    body: """
let
\t$1
end # let
    """
  'do block':
    prefix: 'do'
    body: """
do ${1:args}
\t$2
end # do
    """
